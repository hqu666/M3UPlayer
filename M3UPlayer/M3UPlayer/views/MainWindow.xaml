<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
      xmlns:igEditors="http://infragistics.com/Editors"
		xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
	   xmlns:local="clr-namespace:M3UPlayer"
		xmlns:v="clr-namespace:M3UPlayer.Views"
		xmlns:vm="clr-namespace:M3UPlayer.ViewModels" 
        xmlns:Wpf="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf" x:Class="M3UPlayer.Views.MainWindow" 
        mc:Ignorable="d"
        Title="MainWindow" Height="1080" Width="1920"
        Top="10" Left="10" 
        Closing="Window_Closing"
        >
    <!--xmlns:Controls="clr-namespace:Microsoft.Toolkit.Wpf.UI.Controls;assembly=Microsoft.Toolkit.Wpf.UI.Controls.WebView"
    		Topmost="true"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"  
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"

-->

    <!--<Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>-->

    <Window.Resources>
        <!--<Style TargetType="StackPanel">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
        </Style>-->

        <Style TargetType="{x:Type Label}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="VerticalContentAlignment"  Value="Center"/>
        </Style>

        <ControlTemplate x:Key="buttonTemplate"  TargetType="{x:Type Button}">
            <Border x:Name="border"
                Background="{TemplateBinding Background}"
                CornerRadius="2">
                <ContentPresenter VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
            </Border>
            <!--BorderThickness="2"
 				 Padding="5"
               BorderBrush="DarkGray"-->

        </ControlTemplate>

        <Style TargetType="{x:Type Button}">
            <Setter Property="MinWidth" Value="95"/>

            <Setter Property="Margin" Value="5,5,5,5"/>
            <Setter Property="Template"  Value="{StaticResource buttonTemplate}"/>
        </Style>

        <!--添付ファイル-->
        <Style x:Key="bt-attachment" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="3,3,3,3" />
            <Setter Property="Padding" Value="8,5,10,5" />
            <Setter Property="Panel.ZIndex" Value="90" />
        </Style>
        <Style x:Key="bt-dell" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="Content" Value="×" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Panel.ZIndex" Value="90" />
        </Style>
    </Window.Resources>

    <!--<behaviors:Interaction.Triggers>
        -->
    <!--VMからダイアログサンプル①-->
    <!--<l:InteractionMessageTrigger MessageKey="MessageKey_Confirm" Messenger="{Binding Messenger}">
            <l:ConfirmationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>-->
    <!--


        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </behaviors:EventTrigger>
        -->
    <!--<l:InteractionMessageTrigger MessageKey="FileNameInputShow" Messenger="{Binding Messenger}" >
            <l:TransitionInteractionMessageAction 
                WindowType="{x:Type v:FileNameInput}" Mode="Modal" >
            </l:TransitionInteractionMessageAction>
        </l:InteractionMessageTrigger>-->
    <!--

    </behaviors:Interaction.Triggers>-->

    <!--<UniformGrid Columns="3">-->
    <Grid Background = "Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="ListColumnDefinition"
                              MinWidth="100" 
                              Width="*"
                             />
            <!--
            "{Binding ListWidth, Mode=TwoWay} で
            System.Windows.Data Error: 40 : BindingExpression path error: 'ExploreShow' property not found on 'object' 
            "-->
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition  Width="*" MinWidth="50" />
        </Grid.ColumnDefinitions>
        <Grid  Grid.Column="0" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid VerticalAlignment="Bottom" Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="13*"/>
                        <RowDefinition Height="27*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="Auto" />
                        <ColumnDefinition  Width="Auto" />
                        <ColumnDefinition  Width="Auto" />
                        <ColumnDefinition  Width="Auto" />
                        <ColumnDefinition  Width="Auto" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition  Width="Auto" />
                        <ColumnDefinition  Width="Auto" />
                        <ColumnDefinition  Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button Command="{Binding FileDlogShow}"
						AutomationProperties.HelpText="ファイル選択" 
							Width="Auto" 
							HorizontalAlignment="Center"  VerticalAlignment="Top" MinWidth="26" MinHeight="26" Margin="0,7,0,0" Grid.RowSpan="2"
							 >
                        <Button.Background>
                            <ImageBrush ImageSource="/views/file_icon.png"/>
                        </Button.Background>
                    </Button>
                    <Button Command="{Binding FolderDlogShow}"
							AutomationProperties.HelpText="フォルダ選択" 
							Grid.Column="1" 
							 VerticalAlignment="Top" Panel.ZIndex="26" MinWidth="26" 
							 HorizontalAlignment="Right" Margin="0,7,0,0" Height="26" Grid.RowSpan="2"
							>
                        <Button.Background>
                            <ImageBrush ImageSource="/views/folder_icon.png" Stretch="UniformToFill"/>
                        </Button.Background>
                    </Button>
                    <Button Command="{Binding ExploreShow}"
							AutomationProperties.HelpText="エクスプローラーからDorp" 
						Grid.Column="2" 
							HorizontalAlignment="Center"  VerticalAlignment="Top" MinWidth="26" Panel.ZIndex="26" Height="26" Margin="0,5,0,0" Grid.RowSpan="2"
							 >
                        <Button.Background>
                            <ImageBrush ImageSource="/views/explore_icon.png" Stretch="UniformToFill"/>
                        </Button.Background>
                    </Button>
                    <Button Content="新規プレイリスト"
                             Command="{Binding FileNameInputShow}"
  						    Grid.Column="3" Margin="5,5,5,5" Grid.RowSpan="2" 
                          />

                    <!--メッセージボックス；三択サンプル②-->
                    <!--<Button Content="三択" 
         						Grid.Column="4" 
                                VerticalAlignment="Center" HorizontalAlignment="Center" Width="100" Height="30" >
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Click" >
                                <l:ConfirmationDialogInteractionMessageAction>
                                    <l:DirectInteractionMessage 
                                            CallbackMethodTarget="{Binding}" 
                                            CallbackMethodName="MessageBoxClosed"
                                        >
                                        <l:ConfirmationMessage Caption="Is this a MessageBox?" Text="Message text" Image="Question" Button="YesNoCancel" />
                                    </l:DirectInteractionMessage>
                                </l:ConfirmationDialogInteractionMessageAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </Button>-->

                    <!--inputダイアログサンプル　https://github.com/runceel/Livet　①-->
                    <!--<Button Content="VMからConfirm"
                             Command="{Binding ViewModelConfirmFrom}"
  						Grid.Column="5" 
                      />-->
                    <Button Content="保存"
                             Command="{Binding PlayListSave}"
                            Visibility="{Binding PlayListSaveBTVisble}"
  						    Grid.Column="4" 
                            HorizontalAlignment="Center" Margin="0,5,0,5" Grid.RowSpan="2"
                            />


                    <StackPanel  Grid.Column="6" Orientation="Horizontal" HorizontalAlignment="Center" Grid.RowSpan="2">
                        <ComboBox 
                            SelectedValuePath="Key" 
                            DisplayMemberPath="Value"
                            SelectedIndex="{Binding PLComboSelectedIndex, Mode=TwoWay}"
                            ItemsSource="{Binding PLComboSource, Mode=TwoWay}"
                            SelectedValue="{Binding PlayListComboSelected, Mode=TwoWay}"
                            ContextMenu="{Binding PlayListComboItemMenu}"
						    Height="26" Width="Auto"
						/>
                        <!--
                                  SelectedValuePath="Key" 
                        
                                                          SelectedValuePath="{Binding PlayListComboSelectedu"
                        重大度レベル	コード	説明	プロジェクト	ファイル	行	抑制状態
エラー	MC3065	'SelectedItems' プロパティは読み取り専用で、マークアップから設定することはできません。 行 228 位置 29.	M3UPlayer	H:\develop\2022\M3U\M3UPlayer\M3UPlayer\views\MainWindow.xaml	228	


                        -->

                    </StackPanel>
                    <Label  Grid.Column="7"
                            Content="{Binding ListItemCount, Mode=TwoWay}" Margin="5,5,5,5" Grid.RowSpan="2"
                            />
                    <Label  Grid.Column="8"
                            Content="件" Margin="5,5,5,5" Grid.RowSpan="2"
                            />
                </Grid>

                <DataGrid  x:Name="PlayList"
						   Grid.Row="1" Grid.Column="0"
						   ItemsSource="{Binding PLList, Mode=TwoWay}"
						   SelectionMode="{Binding PlayListSelectionMode, Mode=TwoWay}"
                           SelectedIndex="{Binding SelectedPlayListIndex, Mode=TwoWay}"
                           ContextMenu="{Binding PlayListMenu}"
                           MouseMove="PlayList_MouseMove"
                           GiveFeedback="PlayListBox_GiveFeedback"
                           AllowDrop="true"
                           SelectionUnit="FullRow"
						   CanUserAddRows="False" 
						   CanUserDeleteRows="False"
						   RowDetailsVisibilityMode="Visible" 
						   AutoGenerateColumns="False" 
                           IsReadOnly="True" 
                           PreviewDragEnter="PlayList_PreviewDragOver"
                           PreviewDrop="PlayList_PreviewDrop"
                           DragEnter="PlayList_DragEnter" 
                           Drop="PlayList_Drop" 
                           MouseDown="PlayList_MouseDown" 
                           MouseUp="PlayList_MouseUp" Margin="0,0,5,0" 
						>
                    <!--
    						   SelectionMode="Extended"
               PlayListSelectionMode="Extended"
                                          SelectedItems="{Binding PLListSelectedItem}"
     
               DragEnter="PlayList_DragEnter" 
                           DragLeave="PlayList_DragLeave" 
                           DragOver="PlayList_DragOver" 
                           Drop="PlayList_Drop" 
                           PreviewDragEnter="PlayList_PreviewDragEnter" 
                           PreviewDragLeave="PlayList_PreviewDragLeave" 
                           PreviewDragOver="PlayList_PreviewDragOver" 
                           PreviewDrop="PlayList_PreviewDrop" 
                    -->
                    <!--
                        MouseMoveで座標情報を拾う方法が不明
                        <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="MouseDown">
                            <behaviors:InvokeCommandAction Command="{Binding PlayListLeftClick}" 
                                                           CommandParameter="{Binding ElementName=PlayList}"/>
                        </behaviors:EventTrigger>
                        <behaviors:EventTrigger EventName="MouseMove">
                            <behaviors:InvokeCommandAction Command="{Binding PlayListMouseMove}" 
                                                           CommandParameter="{Binding ElementName=PlayList}"/>
                        </behaviors:EventTrigger>
                        <behaviors:EventTrigger EventName="MouseUp">
                            <behaviors:InvokeCommandAction Command="{Binding PlayListMouseUp}" 
                                                           CommandParameter="{Binding ElementName=PlayList}"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>-->
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="URL"
                                            Binding="{Binding GranDir}" 
                                            Width="*"
                                            >
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="folder" 
                                            Binding="{Binding ParentDir}" 
                                            Width="Auto"
                                             />
                        <DataGridTextColumn Header="file" 
                                            Binding="{Binding Summary}" 
                                            Width="Auto"
                                             />
                        <DataGridTextColumn Header="ext" 
                                            Binding="{Binding extentionStr}" 
                                            Width="Auto"
                                             />
                    </DataGrid.Columns>
                </DataGrid>
                <!-- Drag and Drop Popup -->
                <Popup x:Name="popup1" IsHitTestVisible="False" Placement="RelativePoint"
                       PlacementTarget="{Binding ElementName=me}"
                       IsOpen="{Binding Drag_now, Mode=TwoWay}"
                       AllowsTransparency="True">
                    <Border
                    BorderBrush="LightSteelBlue"
                    BorderThickness="2" Background="White" Opacity="0.75">
                        <StackPanel Orientation="Horizontal" Margin="4,3,8,3">
                            <!--<Image Source="/views/rewbtn.png"
                               Width="16" Height="16" OpacityMask="Black" />-->
                            <TextBlock Text="{Binding DraggedItem_name, ElementName=me}" 
                                       x:Name="popup_text"
                                        FontSize="14" FontWeight="Bold"
                                        VerticalAlignment="Center" Margin="8,0,0,0" 
                                        />
                        </StackPanel>
                    </Border>
                </Popup>

                <StackPanel Grid.Row="2" 
                            Orientation="Horizontal" HorizontalAlignment="Left" 
                            >
                    <!--HorizontalAlignment="Right"-->

                    <Button  Content="↑"
                             Command="{Binding ListRewind}" 
                             Width="40" Height="40" MinWidth="30" RenderTransformOrigin="0.5,0.5"
                             Foreground="White" FontSize="18" FontWeight="Bold" BorderBrush="#00000000" BorderThickness="0,0,0,0" Padding="0,0,0,0" HorizontalContentAlignment="Center"
                            >
                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="90"/>
                                <TranslateTransform X="0"/>
                            </TransformGroup>
                        </Button.RenderTransform>
                        <Button.Background>
                            <ImageBrush ImageSource="/views/rewbtn.png" Stretch="UniformToFill"/>
                        </Button.Background>
                    </Button>
                    <Button Command="{Binding MuteClick}" 
                            Width="40" Height="40" MinWidth="30" Margin="20,5,5,5" 
                            BorderBrush="Transparent" Background="#00DDDDDD"
                                    >
                        <Image x:Name="MuteBtImage" Source="/views/ei-sound.png" >
                            <!--
                            
                             Foreground="#00000000"
                            <Image.OpacityMask>
                                <ImageBrush ImageSource="/views/ei-sound.png"/>
                            </Image.OpacityMask>-->
                        </Image>
                    </Button>
                    <Slider x:Name="SoundSlider"
                            HorizontalAlignment="Stretch" 
                            Width="200" Height="20"
                            Margin="0,0,20,0"
                            Maximum="1"
                            AutoToolTipPlacement="TopLeft"
                            Value="{Binding SoundValue, Mode=TwoWay}"
                            Thumb.DragCompleted="SoundSlider_DragCompleted"
                            />

                    <Button Content="↓" 
                            Command="{Binding ListForwarding}" 
                            Width="40" Height="40" 
                            MinWidth="30" 
                            RenderTransformOrigin="0.5,0.5"
                            Foreground="White" FontSize="18" FontWeight="Bold" BorderBrush="#00000000" BorderThickness="0,0,0,0" Padding="0,0,0,0" HorizontalContentAlignment="Center"
                            >
                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="90"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Button.RenderTransform>
                        <Button.Background>
                            <ImageBrush ImageSource="/views/ffbtn.png" Stretch="UniformToFill"/>
                        </Button.Background>
                    </Button>

                </StackPanel>

                <StackPanel Grid.Row="2" 
                            Orientation="Horizontal" 
                            HorizontalAlignment="Right"
                            >

                    <Button Command="{Binding ControlHide}" 
                            Content="⇙"
                            x:Name="ControlHideBT"
                            MinWidth="30" 
                            Width="36" Height="36" FontSize="24" 
                            Padding="-10"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"/>
                </StackPanel>

            </Grid>
        </Grid>
        <GridSplitter Grid.Column="1"
                          Width="5"
                          HorizontalAlignment="Stretch" 
                          Background="Gray" />
        <Grid  Grid.Column="2" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--ここで動画再生-->
                <Grid x:Name="FrameGrid">
                    <!--<Frame x:Name="frame" Background="#555" />-->
                    <Wpf:WebView2  Name="webView"
  					    Source="{Binding TargetURI, Mode=TwoWay}" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"
                     />
                    <!--
                                            NavigationCompleted="WebView_NavigationCompleted"

                    Navigating="Frame_Navigating"    NavigationUIVisibility="Hidden" 
                        
					    NavigationStarting="WebView_NavigationStarting" 
					    SourceUpdated="WebView_SourceUpdated" 
					    ContentLoading="WebView_ContentLoading" 
					    WebMessageReceived="WebView_WebMessageReceived" 
					    RequestBringIntoView="WebView_RequestBringIntoView" 
					    TargetUpdated="WebView_TargetUpdated" 
					    MouseUp="WebView_MouseUp" 
					    GotMouseCapture="WebView_GotMouseCapture" 
					    MouseLeftButtonDown="WebView_MouseLeftButtonDown" 
                    -->
                </Grid>

                <Grid x:Name="PlayerContlolGR" 
                    Grid.Row="1"
                      
                      >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button  
                        x:Name="PlayBt"
                        Command="{Binding PlayBtClick}" 
                        Background="#00DDDDDD" 
                        Margin="0,0,0,0" 
                        BorderBrush="#00000000" 
                        BorderThickness="0,0,0,0" 
                        Width="98" Height="98" 
                        Foreground="#00000000"
                        >
                        <Image x:Name="PlayBtImage" Source="/views/pl_r_btn.png" Width="86" Height="86" />

                        <!--<Image x:Name="PlayBtImage"  Source="{Binding PlayBtImageSource}"/>-->
                    </Button>

                    <Grid  Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid  VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition  Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel  Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Grid.Column="0"
                                        Margin="0,0,0,0" 
                                       Background="Transparent" 
                                       Text="{Binding PositionStr}" 
                                       FontSize="28" 
                                       Foreground="White" />
                                <TextBlock 
                                        Margin="0,0,6,0" 
                                       Background="Transparent" 
                                       Text=" / "
                                       FontSize="24" 
                                       Foreground="White"/>
                                <TextBlock 
                                        Margin="0,0,6,0" 
                                       Background="Transparent" 
                                       Text="{Binding DurationStr, Mode=TwoWay}"
                                       FontSize="24" 
                                       Foreground="White"/>
                            </StackPanel>
                        </Grid>
                        <Grid VerticalAlignment="Bottom" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition  Width="*" />
                                <ColumnDefinition  Width="Auto" />
                                <ColumnDefinition  Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0"
                                    Command="{Binding RewBtClick}" 
                                    BorderBrush="#00000000" 
                                    BorderThickness="0,0,0,0" 
                                    MinWidth="32" 
                                    Margin="5,5,0,5"
                                    >
                                <Button.Background>
                                    <ImageBrush ImageSource="/views/rewbtn.png" Stretch="Fill"/>
                                </Button.Background>

                            </Button>
                            <ComboBox x:Name="RewCB"
                                      Grid.Column="1"
                                      FontSize="12"
                                      IsEditable="True"
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Right"
                                      DisplayMemberPath=""
                                      ItemsSource="{Binding RewCBComboSource, Mode=TwoWay}"
                                      SelectedValue="{Binding RewCBComboSelected, Mode=TwoWay}"
                                      DropDownClosed="RewCB_DropDownClosed"
                                      MinWidth="50" 
                                      Margin="5,0,5,0"
                                      />
                            <Slider x:Name="PositionSL"
                                    Grid.Column="2"
                                    VerticalContentAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch" 
                                    Margin="0,6,0,0"
                                    SmallChange="1" LargeChange="10"
                                    IsSnapToTickEnabled="True"
                                    AutoToolTipPlacement="TopLeft"
                                    Thumb.DragStarted="PositionSL_DragStarted"
                                    Thumb.DragCompleted="PositionSL_DragCompleted"
                                    Maximum="{Binding SliderMaximum, Mode=OneWay}"
                                    Value="{Binding SliderValue, Mode=TwoWay}"
                                    Style="{DynamicResource MySliderStyle}">
                                <!--
                                     ValueChanged="Slider_ValueChanged"
                                                                   ValueChanged="{Binding PositionSliderValueChanged}"

                                センターライン；TrackBackground　/　ハンドル；Thumb-->
                                <Slider.Resources>
                                    <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
                                    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
                                    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
                                    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
                                    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
                                    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
                                    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
                                    <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
                                    <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
                                    <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" 
                                                  Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" 
                                                  Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" 
                                                  UseLayoutRounding="True" VerticalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" 
                                                  Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" 
                                                  Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6"/>
                                    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>
                                    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" 
                                                  Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" 
                                                  Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" 
                                                  UseLayoutRounding="True" VerticalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" 
                                                         Grid.Row="0" Visibility="Collapsed"/>
                                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" 
                                                         Grid.Row="2" Visibility="Collapsed"/>
                                                <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" 
                                                        BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="20.0" Margin="5,0" 
                                                        Grid.Row="1" VerticalAlignment="center">
                                                    <Canvas Margin="-6,-1">
                                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                                                   Height="4.0" Visibility="Hidden"/>
                                                    </Canvas>
                                                </Border>
                                                <Track x:Name="PART_Track" Grid.Row="1">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb x:Name="Thumb" 
                                                               Focusable="False" 
                                                               Height="36" 
                                                               OverridesDefaultStyle="True" 
                                                               Template="{StaticResource SliderThumbHorizontalDefault}" 
                                                               VerticalAlignment="Center" Width="11"/>
                                                    </Track.Thumb>
                                                </Track>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="TickPlacement" Value="TopLeft">
                                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="BottomRight">
                                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="Both">
                                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="true">
                                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" 
                                                  Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" 
                                                  Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="true">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" 
                                                         Visibility="Collapsed" Width="4"/>
                                                <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" 
                                                         Visibility="Collapsed" Width="4"/>
                                                <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" 
                                                        BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" 
                                                        Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                                                    <Canvas Margin="-1,-6">
                                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                                                   Visibility="Hidden" Width="4.0"/>
                                                    </Canvas>
                                                </Border>
                                                <Track x:Name="PART_Track" Grid.Column="1">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" 
                                                               Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                                                    </Track.Thumb>
                                                </Track>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="TickPlacement" Value="TopLeft">
                                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                                                <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="BottomRight">
                                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                                                <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="Both">
                                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="true">
                                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                    <Style x:Key="MySliderStyle" TargetType="{x:Type Slider}">
                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
                                        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Vertical">
                                                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Slider.Resources>
                            </Slider>
                            <ComboBox x:Name="ForwardCB"
                                      Grid.Column="3"
                                      FontSize="12"
                                      IsEditable="True"
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Right"
                                      DisplayMemberPath=""
                                      ItemsSource="{Binding ForwardCBComboSource, Mode=TwoWay}"
                                      SelectedValue="{Binding ForwardCBComboSelected, Mode=TwoWay}"
                                      DropDownClosed="ForwardCB_DropDownClosed"
                                      MinWidth="50" 
                                      Margin="10,0,5,0"
                                      >
                            <!--
                                       SelectedValuePath="Key" 
                                      DisplayMemberPath="Value"
                                          SelectedIndex="{Binding ForwardCBSelectedIndex, Mode=TwoWay}"
                           MouseDoubleClick="{Binding ForwardCB_MouseDoubleClick}"-->
                                <!--<ComboBoxItem>5</ComboBoxItem>
                                <ComboBoxItem>30</ComboBoxItem>
                                <ComboBoxItem>300</ComboBoxItem>
                                <ComboBoxItem>600</ComboBoxItem>-->
                            </ComboBox>
                            <Button x:Name="ForwardBT"
                                    Grid.Column="4"
                                    Command="{Binding FFBtClick}" 
                                    MinWidth="32" 
                                    BorderBrush="#00000000" 
                                    BorderThickness="0,0,0,0" 
                                    Margin="0,5,5,5"
                                    >

                                <Button.Background>
                                    <ImageBrush 
                                                ImageSource="/views/ffbtn.png"
                                                Stretch="Fill" AlignmentX="Right"/>
                                </Button.Background>
                            </Button>

                        </Grid>
                    </Grid>

                </Grid>
            </Grid>

        </Grid>
    </Grid>

</Window>
